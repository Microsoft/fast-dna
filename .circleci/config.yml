version: 2

jobs:
  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/fast-dna
    steps:
      - checkout
      - run:
          name: Install the latest NPM version and patches
          command: |
            sudo npm i npm@latest -g
            npm update rc --depth 4
      - run:
          name: Install the latest Lerna version
          command: |
            sudo npm i lerna@latest -g
      - restore_cache:
          keys:
          - v1-dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install all dependency packages
          command: |
            npm i
      - run:
          name: Execute Lerna bootstrap
          command: |
            lerna bootstrap
      - save_cache:
          key: v1-dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules   
      - run: 
          name: Test
          command: |
            lerna run test --stream

  "test-coverage":
    environment:
      CC_TEST_REPORTER_ID=08a773cb4ea5811add5a45e12873e5cd2634c005568705cc37abfd5217617a32
    docker:
      - image: circleci/node:latest
    working_directory: ~/fast-dna
    steps:
      - checkout
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - run:
          name: Run tests
          command: |
            for f in packages/*; do
              if [ -d $f]; then
                echo $f;
                ./cc-test-reporter format-coverage -t lcov -o coverage/coverage.${f//\//-}.json $f/coverage/lcov.info;
              fi
            done;
            ./cc-test-reporter sum-coverage -o coverage/coverage.total.json coverage/coverage.*.json;
            ./cc-test-reporter upload-coverage -i coverage/coverage.total.json;
workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - "test-coverage":
          requires:
            - build

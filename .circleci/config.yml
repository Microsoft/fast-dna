# Validate this file using
# $ circleci config validate -c .circleci/config.yml
# Reference url: https://circleci.com/blog/circleci-hacks-validate-circleci-config-on-every-commit-with-a-git-hook/
version: 2

jobs:
  build:
    docker:
      - image: circleci/node:latest
    environment:
      CC_TEST_REPORTER_ID: 08a773cb4ea5811add5a45e12873e5cd2634c005568705cc37abfd5217617a32
    working_directory: ~/fast-dna
    steps:
      - checkout
      - run:
          name: Install the latest NPM version and patches
          command: |
            sudo npm i npm@latest -g
            npm update rc --depth 4
      - run:
          name: Install the latest Lerna version
          command: |
            sudo npm i lerna@latest -g
      - restore_cache:
          keys:
          - ci-cache-{{ checksum "package.json" }}          
      - run:
          name: Install all dependency packages
          command: |
            npm i
      - run:
          name: Execute Lerna bootstrap
          command: |
            lerna bootstrap
      - run: 
          name: Test all packages
          command: |
            lerna run test --stream
      - run:
          name: Setup and execute Code Climate reporter
          command: |
            if [ ! -f ./tmp/cc-test-reporter ]; then
              mkdir -p tmp/
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
              chmod +x ./tmp/cc-test-reporter
            fi

            # Code Coverage
            # Notify Code Climate that a build is about to start
            ./tmp/cc-test-reporter before-build --debug

            for f in packages/*; do
              if [ -d "$f" ]; then
                echo $f
                set +e
                ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/coverage.${f//\//-}.json $f/coverage/lcov.info --debug
              fi
            done;

            ./tmp/cc-test-reporter sum-coverage -o tmp/coverage.total.json tmp/coverage.*.json --debug
            ./tmp/cc-test-reporter upload-coverage -i tmp/coverage.total.json --debug
      - save_cache:
          key: ci-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ./coverage
            - ./tmp/cc-test-reporter
# // TODO #428: Reconfigure to support workflows to improve performmance
#   "test-coverage":
#     environment:
#       CC_TEST_REPORTER_ID=08a773cb4ea5811add5a45e12873e5cd2634c005568705cc37abfd5217617a32
#     docker:
#       - image: circleci/node:latest
#     working_directory: ~/fast-dna
#     steps:
#       - checkout
#       - run:
#           name: Setup Code Climate test-reporter
#           command: |
#             mkdir -p tmp/
#             curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
#             chmod +x ./tmp/cc-test-reporter
#       - run:
#           name: Run tests
#           command: |
#             ./tmp/cc-test-reporter before-build
#             for f in packages/*; do
#               if [ -d $f ]; then
#                  echo $f
#                 ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/coverage.${f//\//-}.json $f/coverage/lcov.info
#               fi
#             done;
#             ./tmp/cc-test-reporter sum-coverage -o tmp/coverage.total.json tmp/coverage.*.json
#             ./tmp/cc-test-reporter upload-coverage -i tmp/coverage.total.json
#             ./tmp/cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
# workflows:
#   version: 2
#   build-and-test:
#     jobs:
#       - build
#       - "test-coverage":
#           requires:
#             - build
